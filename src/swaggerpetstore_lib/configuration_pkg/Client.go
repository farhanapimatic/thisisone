/*
 * swaggerpetstore_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package configuration_pkg

import(
	"swaggerpetstore_lib/apihelper_pkg"
)
/* Setting up enums for Environments and Servers 
*/
type Environments int

type Servers int

const (
     PRODUCTION Environments = 1 + iota
)
const (
 	 SERVER1 Servers = 1 + iota
   	 SERVER2
   	 AUTH_SERVER
)

type CONFIGURATION_IMPL struct {
/** OAuth 2.0 Access Token */
    /** Replace the value of oauthaccesstoken with SetOAuthAccessToken function */
    oauthaccesstoken string
}
 
  
/*
 * Getter function returning oauthaccesstoken
 */
func (me *CONFIGURATION_IMPL) OAuthAccessToken() string{
     return me.oauthaccesstoken
}

/*
 * Setter function setting up oauthaccesstoken
 */
func (me *CONFIGURATION_IMPL) SetOAuthAccessToken(oAuthAccessToken string) {
      me.oauthaccesstoken = oAuthAccessToken
}

// Setting up Default Environment
var Environment = PRODUCTION

//A map of environments and their corresponding servers/baseurls
 var EnvironmentsMap = map[Environments](map[Servers]string){

    PRODUCTION : map[Servers]string{
        SERVER1:"https://petstore.swagger.io/v2",
        SERVER2:"http://petstore.swagger.io/v2",
        AUTH_SERVER:"https://petstore.swagger.io/oauth",
    },
}
 
// Make and return the map of parameters
func GetBaseURIParameters(config CONFIGURATION) map[string]interface{} {
     kvpMap := map[string]interface{}{
    }
    return kvpMap;
}

// Gets the URL for a particular alias in the current environment and appends it with template parameters
// return the baseurl
func GetBaseURI(server Servers, config CONFIGURATION) string {
    url := EnvironmentsMap[Environment][server]
    appendedURL, _ := apihelper_pkg.AppendUrlWithTemplateParameters(url, GetBaseURIParameters(config))
    return appendedURL

}
